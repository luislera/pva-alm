name: pva-workflow-3
on:
  workflow_dispatch:
    inputs:
      source_environment:
        description: "GitHub environment name to get the solution"
        required: true
        default: "DEV"
      target_environment:
        description: "GitHub environment name to import the solution"
        required: true
        default: "PR"

env:
  workflow_scripts_path: .github/workflows/scripts

jobs:
  execute-pvawf2-sync-from-main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: run-pvawf2-sync-from-main
        id: run-pvawf2-sync-from-main
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.WORKFLOW_DISPATCH_TOKEN}}
          script: |
            let helper = require('${{ env.workflow_scripts_path }}/js/githubHelper.js')
            let ref = '${{ github.ref }}'
            let params = {
              environment: '${{ github.event.inputs.source_environment }}'
            }
            await helper.dispatchWorkflow(github, context, 'pvawf2-sync-from-main.yml', ref, params)

      - name: check-pvawf2-sync-from-main-workflow-status
        id: check-pvawf2-sync-from-main-workflow-status
        uses: actions/github-script@v6
        with:
          script: |
            let helper = require('${{ env.workflow_scripts_path }}/js/githubHelper.js')
            await helper.checkWorkflowStatus(github, context, core, 'pvawf2-sync-from-main.yml')

  import-unmanaged-solution:
    runs-on: ubuntu-latest
    needs: execute-pvawf2-sync-from-main
    environment: ${{ github.event.inputs.target_environment }}
    steps:
      - uses: actions/checkout@v2
      - name: import-unmanaged-solution
        id: import-unmanaged-solution
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.WORKFLOW_DISPATCH_TOKEN}}
          script: |
            let helper = require('${{ env.workflow_scripts_path }}/js/githubHelper.js')
            let ref = '${{ github.ref }}'
            let params = {
              solution_name: '${{ secrets.SOLUTION_NAME }}',
              environment_url: '${{ secrets.ENVIRONMENT_URL }}',
              ref: '${{ github.ref }}'
            }
            await helper.dispatchWorkflow(github, context, 'import-unmanaged-solution.yml', ref, params)

      - name: check-import-unmanaged-solution-workflow-status
        id: check-import-unmanaged-solution-workflow-status
        uses: actions/github-script@v6
        with:
          script: |
            let helper = require('${{ env.workflow_scripts_path }}/js/githubHelper.js')
            await helper.checkWorkflowStatus(github, context, core, 'import-unmanaged-solution.yml')

  delete-and-import-unmanaged-solution:
    runs-on: ubuntu-latest
    needs: import-unmanaged-solution
    environment: ${{ github.event.inputs.target_environment }}
    steps:
      - uses: actions/checkout@v2
      - name: delete-and-import-unmanaged-solution
        id: delete-and-import-unmanaged-solution
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.WORKFLOW_DISPATCH_TOKEN}}
          script: |
            let helper = require('${{ env.workflow_scripts_path }}/js/githubHelper.js')
            let ref = '${{ github.ref }}'
            let params = {
              solution_name: '${{ secrets.SOLUTION_NAME }}',
              environment_url: '${{ secrets.ENVIRONMENT_URL }}',
              ref: '${{ github.ref }}'
            }
            await helper.dispatchWorkflow(github, context, 'delete-and-import-unmanaged-solution.yml', ref, params)

      - name: check-delete-and-import-unmanaged-solution-workflow-status
        id: check-delete-and-import-unmanaged-solution-workflow-status
        uses: actions/github-script@v6
        with:
          script: |
            let helper = require('${{ env.workflow_scripts_path }}/js/githubHelper.js')
            await helper.checkWorkflowStatus(github, context, core, 'delete-and-import-unmanaged-solution.yml')