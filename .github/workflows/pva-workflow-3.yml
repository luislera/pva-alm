name: pva-workflow-3
on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: "name of the Solution in Dataverse environment"
        required: true
        default: MicaSolution
      environment_url:
        description: "http endpoint of your Dataverse environment"
        required: true
        default: "https://orgea394ded.crm.dynamics.com/"
      source_branch:
        description: "source branch"
        required: true
        default: main
      branch_to_create:
        description: "branch to create"
        required: false
        default: "init2"
      commit_message:
        description: "message to provide for the commit"
        required: true
        default: "init message"

env:
  workflow_scripts_path: .github/workflows/scripts

jobs:
  execute-pva-workflow-2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: run-pva-workflow-2
        id: run-pva-workflow-2
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.WORKFLOW_DISPATCH_TOKEN}}
          script: |
            let helper = require('${{ env.workflow_scripts_path }}/js/githubHelper.js')
            let ref = '${{ github.ref }}'
            let params = {
              solution_name: '${{ github.event.inputs.solution_name }}',
              environment_url: '${{ github.event.inputs.environment_url }}',
              source_branch: '${{ github.event.inputs.source_branch }}',
              branch_to_create: '${{ github.event.inputs.branch_to_create }}',
              commit_message: '${{ github.event.inputs.commit_message }}'
            }
            await helper.dispatchWorkflow(github, context, 'pva-workflow-2.yml', ref, params)

      - name: check-pva-workflow-2-workflow-status
        id: check-pva-workflow-2-workflow-status
        uses: actions/github-script@v6
        with:
          script: |
            let helper = require('${{ env.workflow_scripts_path }}/js/Sleep.js')
            await helper.checkWorkflowStatus(github, context, core, 'pva-workflow-2.yml')

  delete-and-import-unmanaged-solution:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: delete-and-import-unmanaged-solution
        id: delete-and-import-unmanaged-solution
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.WORKFLOW_DISPATCH_TOKEN}}
          script: |
            let helper = require('${{ env.workflow_scripts_path }}/js/githubHelper.js')
            let ref = '${{ github.ref }}'
            let params = {
              solution_name: '${{ github.event.inputs.solution_name }}',
              environment_url: '${{ github.event.inputs.environment_url }}',
              ref: '${{ github.ref }}'
            }
            await helper.dispatchWorkflow(github, context, 'delete-and-import-unmanaged-solution.yml', ref, params)

      - name: check-delete-and-import-unmanaged-solution-workflow-status
        id: check-delete-and-import-unmanaged-solution-workflow-status
        uses: actions/github-script@v6
        with:
          script: |
            let helper = require('${{ env.workflow_scripts_path }}/js/githubHelper.js')
            await helper.checkWorkflowStatus(github, context, core, 'delete-and-import-unmanaged-solution.yml')